# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

###################
# Hay que instalar:
#   vim-mode-plus
#   vim-mode-plus-ex-mode
#   vim-mode-plus-keymaps-for-surround
#   command-palette
#   jump-to-line
#   jumpy
###################
'atom-text-editor.vim-mode-plus.normal-mode':
  ', b': 'fuzzy-finder:toggle-buffer-finder'
  ', f': 'fuzzy-finder:toggle-file-finder'
  ', p': 'command-palette:toggle'
  ', t': 'command-palette:toggle'
  ', w': 'core:save'
  ', q': 'core:close'
  ', , q': 'application:quit'
  ', .': 'vim-mode-plus-ex-mode:open' #'ex-mode:open'
  ', e': 'application:open'
  ', s': 'vim-mode-plus:search'
  ', S': 'vim-mode-plus:search-backwards'
  ', , j': 'jump-to-line:start'
  ', , k': 'jump-to-line:start'
  ', , f': 'jumpy:toggle'
  ', , F': 'jumpy:toggle'
  ', , t': 'jumpy:toggle'
  ', , T': 'jumpy:toggle'
  ', , w': 'jumpy:toggle'
  ', c i': 'editor:toggle-line-comments'
